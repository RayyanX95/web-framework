{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS,EAAT,CAAb;AAEA,ADGA,ICHI,CAAC,EAAL,CAAQ,IDGR,ICHA,EAAkB,YAAA;AAChB,ADMA,ECNA,OAAO,CAAC,CDMR,ECNA,CAAY,CDMZ,CAAoB,IAApB,EAAmC,KCNnC;AACD,ADKqB,CCPtB,QDOsB,IAAA,GAAA,IAAA;ACHtB,ADCE,ICDE,CAAC,EAAL,CAAQ,CDCN,MAAA,CCDF,EAAkB,ADCwB,EAAxC,UCDgB;AAChB,ADEwC,ECFxC,OAAO,CAAC,GAAR,CAAY,cAAZ;AACD,CAFD;AAIA,ADD0C,ICCtC,CAAC,OAAL,CAAa,QAAb;;ADIE,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;AAClB,WAAO,KAAK,IAAL,CAAU,QAAV,CAAP;AACD,GAFD;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;AACnB,IAAA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;AACD,GAFD;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACtC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AAEA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GALD;;AAOA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,CAAC,QAAQ,CAAC,MAA3B,EAAmC;AACjC;AACD;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AAAI,aAAA,QAAQ,EAAR;AAAU,KAAvC;AACD,GARD;;AASF,SAAA,IAAA;AAjCA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n  name?: string;\r\n  age?: number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n\r\n  events: { [key: string]: Callback[] } = {};\r\n\r\n  constructor(private data: UserProps) { };\r\n\r\n\r\n\r\n\r\n  get(propName: string): string | number {\r\n    return this.data[propName];\r\n  }\r\n\r\n  set(update: UserProps): void {\r\n    Object.assign(this.data, update);\r\n  }\r\n\r\n  on(eventName: string, callback: Callback): void {\r\n    const handlers = this.events[eventName] || [];\r\n    handlers.push(callback);\r\n\r\n    this.events[eventName] = handlers;\r\n  }\r\n\r\n  trigger(eventName: string): void {\r\n    const handlers = this.events[eventName];\r\n\r\n    if (!handlers || !handlers.length) {\r\n      return;\r\n    }\r\n\r\n    handlers.forEach(callback => callback())\r\n  }\r\n}\r\n","import { User } from './models/User';\r\n\r\nconst user = new User({});\r\n\r\nuser.on('change', () => {\r\n  console.log(\"First event\");\r\n});\r\n\r\nuser.on('change', () => {\r\n  console.log(\"Second event\");\r\n});\r\n\r\nuser.trigger('change');"]}